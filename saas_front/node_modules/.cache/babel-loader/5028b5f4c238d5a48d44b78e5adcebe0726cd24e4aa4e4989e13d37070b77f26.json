{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport dayjs from \"dayjs\";\nimport axios from \"axios\";\nexport default {\n  data() {\n    return {\n      token: localStorage.getItem('token'),\n      tabPosition: 'left',\n      accountBooksList: [],\n      userList: [],\n      roleList: [],\n      permissionList: [],\n      dialogFormVisible: false,\n      isTrueOrFalse: false,\n      formData: {\n        id: '',\n        bookName: '',\n        contactPerson: '',\n        contactPhoneNum: '',\n        varType: '',\n        created: '',\n        state: ''\n      },\n      updateformData: {\n        id: '',\n        bookName: '',\n        contactPerson: '',\n        contactPhoneNum: '',\n        varType: '',\n        end: '',\n        state: ''\n      },\n      //用户管理数据\n      userFormDate: {\n        id: '',\n        name: '',\n        username: '',\n        phone: '',\n        email: '',\n        roleName: '',\n        image: ''\n      },\n      list: [],\n      // 分页相关\n      pageno: 1,\n      pagesize: 5,\n      total: 0,\n      // 搜索条件\n      params: {\n        state: undefined\n      },\n      // 新增/修改 内容\n      userFormData: {\n        companyRatio: '',\n        description: '',\n        paymentProject: '',\n        personalRatio: '',\n        id: '',\n        state: '',\n        tenantId: ''\n      },\n      show: false,\n      addshow: false,\n      pickerOptions: {\n        shortcuts: [{\n          text: '最近一周',\n          onClick(picker) {\n            const end = new Date();\n            const start = new Date();\n            start.setTime(start.getTime() - 3600 * 1000 * 24 * 7);\n            picker.$emit('pick', [start, end]);\n          }\n        }, {\n          text: '最近一个月',\n          onClick(picker) {\n            const end = new Date();\n            const start = new Date();\n            start.setTime(start.getTime() - 3600 * 1000 * 24 * 30);\n            picker.$emit('pick', [start, end]);\n          }\n        }, {\n          text: '最近三个月',\n          onClick(picker) {\n            const end = new Date();\n            const start = new Date();\n            start.setTime(start.getTime() - 3600 * 1000 * 24 * 90);\n            picker.$emit('pick', [start, end]);\n          }\n        }]\n      },\n      value1: [new Date(2000, 10, 10, 10, 10), new Date(2000, 10, 11, 10, 10)],\n      value2: '',\n      show: false\n    };\n  },\n  created() {\n    this.getList();\n    this.getUriList();\n    this.getUserList();\n    this.getRoleList();\n    this.getPermissionList();\n    this.role = localStorage.getItem('role');\n    this.storeId = localStorage.getItem('storeId');\n    console.log(this.token);\n  },\n  methods: {\n    async getUriList() {\n      const res = await axios({\n        url: \"http://localhost:8081/log/list\",\n        method: \"get\",\n        // headers: localStorage.getItem(\"token\"),\n        params: {\n          page: this.pageno,\n          limit: this.pagesize,\n          ...this.params,\n          startTime: this.value2[0],\n          overTime: this.value2[1]\n        }\n      });\n      // 修改日期格式\n      this.list = res.data.data.map(item => {\n        return {\n          ...item,\n          // 其他字段...\n          time: dayjs(item.time).format('YYYY-MM-DD HH:mm:ss')\n        };\n      });\n      this.total = res.data.count;\n    },\n    // 点击搜索\n    search() {\n      this.getUriList();\n    },\n    // 页码改变\n    pagechange(pageno) {\n      // 条件改变\n      this.pageno = pageno;\n      // 重新请求数据\n      this.getUriList();\n    },\n    async getUserList(token) {\n      const res = await axios({\n        method: \"get\",\n        url: \"http://localhost:8081/admin/list\"\n      });\n      // 遍历返回的数据，将 createTime 和 endTime 转换为指定格式的日期时间字符串\n      this.userList = res.data.data.map(item => {\n        item.created = dayjs(item.created).format('YYYY-MM-DD HH:mm:ss');\n        item.updated = dayjs(item.updated).format('YYYY-MM-DD HH:mm:ss');\n        return item;\n      });\n    },\n    async getRoleList() {\n      const res = await axios({\n        method: \"get\",\n        url: \"http://localhost:8081/role/list\"\n      });\n      0;\n      // 遍历返回的数据，将 createTime 和 endTime 转换为指定格式的日期时间字符串\n      this.roleList = res.data.data.map(item => {\n        item.created = dayjs(item.created).format('YYYY-MM-DD HH:mm:ss');\n        return item;\n      });\n    },\n    async getPermissionList() {\n      const res = await axios({\n        method: \"get\",\n        url: \"http://localhost:8081/permission/list\"\n      });\n      0;\n      // 遍历返回的数据，将 createTime 和 endTime 转换为指定格式的日期时间字符串\n      this.permissionList = res.data.data.map(item => {\n        item.created = dayjs(item.created).format('YYYY-MM-DD HH:mm:ss');\n        return item;\n      });\n    },\n    async getList() {\n      const res = await axios({\n        method: \"get\",\n        url: \"http://localhost:8081/account/page\"\n      });\n      // 遍历返回的数据，将 createTime 和 endTime 转换为指定格式的日期时间字符串\n      this.accountBooksList = res.data.data.map(item => {\n        item.created = dayjs(item.created).format('YYYY-MM-DD HH:mm:ss');\n        if (item.end) {\n          item.end = dayjs(item.end).format('YYYY-MM-DD HH:mm:ss');\n        } else {\n          item.end = ''; // 如果 endTime 为空，则赋空值\n        }\n        return item;\n      });\n    },\n    viewAccountDetails(id, bookName) {\n      // 存储具体某个账套的bookID到localStorage\n      // localStorage.setItem(\"bookID\", id);\n      // localStorage.setItem(\"bookName\", bookName);\n      // 这里可以跳转到具体账套的详细信息页面或执行其他操作\n      // 示例：跳转到名为'/accountDetails'的路由\n      this.$router.push('/home');\n    },\n    // 打开新增弹窗，\n    addOpen() {\n      // 打开弹窗\n      this.dialogFormVisible = true;\n      // 记录状态\n      // 重置formData\n      this.formData = {\n        id: '',\n        bookName: '',\n        contactPerson: '',\n        contactPhoneNum: '',\n        varType: ''\n      };\n    },\n    updateOpen(item) {\n      this.show = true;\n      this.updateformData = {\n        ...item\n      };\n    },\n    async update() {\n      const data = {\n        ...this.updateformData\n      };\n      if (this.updateformData.state === '禁用') {\n        data.end = new Date();\n        data.state = '禁用';\n      } else {\n        data.end = null;\n        data.state = '启用';\n      }\n      const res = await axios({\n        url: \"http://localhost:8081/account/update\",\n        method: 'post',\n        data: data\n      });\n      this.show = false;\n      this.getList();\n    },\n    async submit() {\n      // 拷贝formData到data\n      const data = {\n        ...this.formData,\n        // 添加其他字段\n        created: new Date(),\n        end: null,\n        storeId: localStorage.getItem('storeId'),\n        state: '启用'\n      };\n      const res = await axios({\n        url: \"http://localhost:8081/account/add\",\n        method: 'post',\n        data: data\n      });\n      this.dialogFormVisible = false;\n      this.getList();\n    }\n  }\n};","map":{"version":3,"names":["dayjs","axios","data","token","localStorage","getItem","tabPosition","accountBooksList","userList","roleList","permissionList","dialogFormVisible","isTrueOrFalse","formData","id","bookName","contactPerson","contactPhoneNum","varType","created","state","updateformData","end","userFormDate","name","username","phone","email","roleName","image","list","pageno","pagesize","total","params","undefined","userFormData","companyRatio","description","paymentProject","personalRatio","tenantId","show","addshow","pickerOptions","shortcuts","text","onClick","picker","Date","start","setTime","getTime","$emit","value1","value2","getList","getUriList","getUserList","getRoleList","getPermissionList","role","storeId","console","log","methods","res","url","method","page","limit","startTime","overTime","map","item","time","format","count","search","pagechange","updated","viewAccountDetails","$router","push","addOpen","updateOpen","update","submit"],"sources":["src/views/accountBooks/FinanceAccountBooks.vue"],"sourcesContent":["<template>\r\n    <el-card>\r\n        <div class=\"sidebar\">\r\n            <el-tabs :tab-position=\"tabPosition\" style=\"height: auto;\">\r\n                <el-tab-pane label=\"账套管理\">\r\n                    <!-- title -->\r\n                    <el-card style=\"text-align:center\">\r\n                        <span\r\n                            style=\"font-size: 24px;font-weight: bold;font-family: 'Times New Roman', Times, serif;\">账套管理</span>\r\n                    </el-card>\r\n                    <!-- 操作按钮 -->\r\n                    <el-card style=\"margin-top: 20px\">\r\n                        <span\r\n                            style=\"font-size: 16px; font-weight: bold; font-family: 'Times New Roman', Times, serif;\">账套管理</span>\r\n                        <!-- 使用 v-if 判断 role 的内容，如果是老板则不显示新增按钮 -->\r\n                        <el-button style=\"margin-left: 20px\" @click=\"addOpen\">新增账套</el-button>\r\n                    </el-card>\r\n                    <!-- 账套区域 -->\r\n                    <el-row>\r\n                        <el-col v-for=\"item in accountBooksList\" :span=\"8\">\r\n                            <el-card>\r\n                                <div slot=\"header\" class=\"clearfix\">\r\n                                    <span>{{ item.bookName }}</span>\r\n                                    <el-button style=\"margin-left: 20px\" v-if=\"item.state === '启用'\" type=\"text\"\r\n                                        @click=\"updateOpen(item)\">\r\n                                        修改账套\r\n                                    </el-button>\r\n                                    <el-button style=\"margin-left: 20px\" type=\"text\"\r\n                                        @click=\"viewAccountDetails(item.id, item.bookName)\">\r\n                                        进入账套\r\n                                    </el-button>\r\n                                </div>\r\n                                <p style=\"margin-top:10px\">账套名称：{{ item.bookName }}</p>\r\n                                <p style=\"margin-top:20px\">纳税类型：{{ item.varType }}</p>\r\n                                <p style=\"margin-top:20px\">启用时间：{{ item.created }}</p>\r\n                                <p style=\"margin-top:20px\">禁用时间：{{ item.end }}</p>\r\n                            </el-card>\r\n                        </el-col>\r\n                    </el-row>\r\n\r\n                </el-tab-pane>\r\n                <el-tab-pane label=\"员工管理\">\r\n\r\n                    <!-- 员工信息表 -->\r\n                    <el-card style=\"margin-top: 20px;\">\r\n\r\n                        <el-card>\r\n                            <span\r\n                                style=\"font-size: 16px;font-weight: bold;font-family: 'Times New Roman', Times, serif;\">员工信息表</span>\r\n                        </el-card>\r\n\r\n                        <el-table :data=\"userList\" border style=\"width: 100%\">\r\n                            <el-table-column prop=\"id\" label=\"序号\" align=\"center\"> </el-table-column>\r\n                            <el-table-column prop=\"dname\" label=\"员工姓名\" align=\"center\"> </el-table-column>\r\n                            <el-table-column prop=\"username\" label=\"用户名\" align=\"center\"> </el-table-column>\r\n                            <el-table-column prop=\"phone\" label=\"手机号\" align=\"center\"> </el-table-column>\r\n                            <el-table-column prop=\"email\" label=\"邮箱\" align=\"center\"> </el-table-column>\r\n                            <el-table-column prop=\"rname\" label=\"角色\" align=\"center\"> </el-table-column>\r\n                            <el-table-column prop=\"created\" label=\"创建时间\" align=\"center\"> </el-table-column>\r\n                            <el-table-column prop=\"updated\" label=\"修改时间\" align=\"center\"> </el-table-column>\r\n                            <el-table-column prop=\"image\" label=\"头像\" align=\"center\"> </el-table-column>\r\n                            </el-table-column>\r\n                            <el-table-column fixed=\"right\" label=\"操作\" width=\"150\" align=\"center\">\r\n                                <template #default=\"{ row }\">\r\n                                    <el-button type=\"text\" size=\"small\" @click=\"removeEmployee(row)\">删除</el-button>\r\n                                    <el-button type=\"text\" size=\"small\" @click=\"edit(row)\">修改</el-button>\r\n                                </template>\r\n                            </el-table-column>\r\n                        </el-table>\r\n                        <!-- 分页组件 -->\r\n                        <el-pagination @current-change=\"pagechange\" background layout=\"prev, pager, next\" :total=\"total\"\r\n                            :page-size=\"pagesize\" style=\"text-align: center; margin-top: 10px;\">\r\n                        </el-pagination>\r\n                    </el-card>\r\n                </el-tab-pane>\r\n                <el-tab-pane label=\"角色管理\">\r\n                    <el-card style=\"margin-top: 20px;\">\r\n\r\n                        <el-card>\r\n                            <span\r\n                                style=\"font-size: 16px;font-weight: bold;font-family: 'Times New Roman', Times, serif;\">角色管理表</span>\r\n                        </el-card>\r\n\r\n                        <el-table :data=\"roleList\" border style=\"width: 100%\">\r\n                            <el-table-column prop=\"id\" label=\"序号\" align=\"center\"> </el-table-column>\r\n                            <el-table-column prop=\"name\" label=\"员工姓名\" align=\"center\"> </el-table-column>\r\n                            <el-table-column prop=\"description\" label=\"描述\" align=\"center\"> </el-table-column>\r\n\r\n                            <el-table-column fixed=\"right\" label=\"操作\" width=\"150\" align=\"center\">\r\n                                <template #default=\"{ row }\">\r\n                                    <el-button type=\"text\" size=\"small\" @click=\"removeEmployee(row)\">删除</el-button>\r\n                                    <el-button type=\"text\" size=\"small\" @click=\"edit(row)\">修改</el-button>\r\n                                </template>\r\n                            </el-table-column>\r\n                        </el-table>\r\n                        <!-- 分页组件 -->\r\n                        <el-pagination @current-change=\"pagechange\" background layout=\"prev, pager, next\" :total=\"total\"\r\n                            :page-size=\"pagesize\" style=\"text-align: center; margin-top: 10px;\">\r\n                        </el-pagination>\r\n                    </el-card>\r\n\r\n                </el-tab-pane>\r\n                <el-tab-pane label=\"权限管理\">\r\n                    <el-card style=\"margin-top: 20px;\">\r\n\r\n                        <el-card>\r\n                            <span\r\n                                style=\"font-size: 16px;font-weight: bold;font-family: 'Times New Roman', Times, serif;\">权限管理表</span>\r\n                        </el-card>\r\n\r\n                        <el-table :data=\"permissionList\" border style=\"width: 100%\">\r\n                            <el-table-column prop=\"id\" label=\"序号\" align=\"center\"> </el-table-column>\r\n                            <el-table-column prop=\"name\" label=\"权限名称\" align=\"center\"> </el-table-column>\r\n                            <el-table-column prop=\"perms\" label=\"uri\" align=\"center\"> </el-table-column>\r\n                            <el-table-column fixed=\"right\" label=\"操作\" width=\"150\" align=\"center\">\r\n                                <template #default=\"{ row }\">\r\n                                    <el-button type=\"text\" size=\"small\" @click=\"removeEmployee(row)\">删除</el-button>\r\n                                    <el-button type=\"text\" size=\"small\" @click=\"edit(row)\">修改</el-button>\r\n                                </template>\r\n                            </el-table-column>\r\n                        </el-table>\r\n                        <!-- 分页组件 -->\r\n                        <el-pagination @current-change=\"pagechange\" background layout=\"prev, pager, next\" :total=\"total\"\r\n                            :page-size=\"pagesize\" style=\"text-align: center; margin-top: 10px;\">\r\n                        </el-pagination>\r\n                    </el-card>\r\n\r\n                </el-tab-pane>\r\n                <el-tab-pane label=\"操作日志\">\r\n                    <div style=\"height: auto; width: auto;\">\r\n\r\n                        <!-- 搜素和新增区域 -->\r\n                        <el-card>\r\n                            <div style=\"display: flex; flex-direction: row;\">\r\n                                <!-- 搜索区域 -->\r\n                                <div style=\"flex: 8;\">\r\n                                    <el-form :inline=\"true\">\r\n                                        <el-form-item label=\"时间\">\r\n                                            <el-date-picker v-model=\"value2\" type=\"datetimerange\"\r\n                                                :picker-options=\"pickerOptions\" range-separator=\"至\"\r\n                                                start-placeholder=\"开始日期\" end-placeholder=\"结束日期\" align=\"right\">\r\n                                            </el-date-picker>\r\n                                        </el-form-item>\r\n                                        <el-form-item label=\"状态\">\r\n                                            <el-select v-model=\"params.state\" placeholder=\"请选择状态\">\r\n                                                <el-option value=\"\"></el-option>\r\n                                                <el-option label=\"失败\" value=\"1\"></el-option>\r\n                                                <el-option label=\"成功\" value=\"0\"></el-option>\r\n                                            </el-select>\r\n                                        </el-form-item>\r\n                                        <el-form-item>\r\n                                            <el-button @click=\"search\" type=\"primary\"\r\n                                                icon=\"el-icon-search\">搜索</el-button>\r\n                                        </el-form-item>\r\n                                    </el-form>\r\n                                </div>\r\n                            </div>\r\n                        </el-card>\r\n\r\n                        <!-- 员工工资表 -->\r\n                        <el-card style=\"margin-top: 20px;\">\r\n\r\n                            <el-card>\r\n                                <span\r\n                                    style=\"font-size: 16px;font-weight: bold;font-family: 'Times New Roman', Times, serif;\">操作日志</span>\r\n                                <!-- <div style=\"border: 2px; margin-top: 20px;\">\r\n            <el-button type=\"primary\" @click=\"addopen\">新增</el-button>\r\n          </div> -->\r\n                            </el-card>\r\n\r\n                            <el-table :data=\"list\" style=\"width: 100%\">\r\n                                <el-table-column type=\"selection\" width=\"55\">\r\n                                </el-table-column>\r\n                                <el-table-column prop=\"id\" label=\"序号\"> </el-table-column>\r\n                                <el-table-column prop=\"module\" label=\"模块\"> </el-table-column>\r\n                                <el-table-column prop=\"opt\" label=\"操作\"> </el-table-column>\r\n                                <el-table-column prop=\"ip\" label=\"IP\"> </el-table-column>\r\n                                <el-table-column prop=\"time\" label=\"访问时间\"> </el-table-column>\r\n                                <el-table-column prop=\"uri\" label=\"URI\"> </el-table-column>\r\n                                <el-table-column prop=\"adminId\" label=\"操作人编号\"> </el-table-column>\r\n                                <el-table-column prop=\"name\" label=\"操作人姓名\"> </el-table-column>\r\n                                <el-table-column prop=\"state\" label=\"访问状态\">\r\n                                    <template slot-scope=\"scope\">\r\n                                        <!-- 使用条件判断显示具体信息 -->\r\n                                        <span v-if=\"scope.row.state === 1\">失败</span>\r\n                                        <span v-else-if=\"scope.row.state === 0\">成功</span>\r\n                                    </template>\r\n                                </el-table-column>\r\n                                <!-- <el-table-column prop=\"description\" label=\"备注\"> </el-table-column> -->\r\n                                <!-- <el-table-column prop=\"tenantId\" label=\"租户id\"> </el-table-column> -->\r\n                                <!-- <el-table-column fixed=\"right\" label=\"操作\" align=\"center\" width=\"200px\">\r\n              <template #default=\"{ row }\">\r\n                <el-button type=\"primary\" icon=\"el-icon-edit\" circle @click=\"update(row)\"></el-button>\r\n                <el-button type=\"danger\" icon=\"el-icon-delete\" circle @click=\"out(row)\"></el-button>\r\n              </template>\r\n            </el-table-column> -->\r\n                            </el-table>\r\n\r\n                            <!-- 分页组件 -->\r\n                            <el-pagination @current-change=\"pagechange\" background layout=\"prev, pager, next\"\r\n                                :total=\"total\" :page-size=\"pagesize\" style=\"text-align: center; margin-top: 10px;\">\r\n                            </el-pagination>\r\n                        </el-card>\r\n\r\n                        <!-- 修改弹窗区域 -->\r\n                        <el-dialog title=\"修改社保公积金\" :visible.sync=\"show\" width=\"600px\">\r\n                            <el-form :model=\"userFormData\" class=\"demo-form-inline\" label-width=\"80px\">\r\n\r\n                                <el-form-item label=\"缴纳项目\">\r\n                                    <el-input v-model=\"userFormData.paymentProject\" placeholder=\"缴纳项目名称\"></el-input>\r\n                                </el-form-item>\r\n\r\n                                <el-form-item label=\"公司缴纳\">\r\n                                    <el-input v-model=\"userFormData.companyRatio\" placeholder=\"公司缴纳比例\"></el-input>\r\n                                </el-form-item>\r\n\r\n                                <el-form-item label=\"个人缴纳\">\r\n                                    <el-input v-model=\"userFormData.personalRatio\" placeholder=\"个人缴纳比例\"></el-input>\r\n                                </el-form-item>\r\n\r\n                                <el-form-item label=\"备注\">\r\n                                    <el-input v-model=\"userFormData.description\" placeholder=\"备注信息\"></el-input>\r\n                                </el-form-item>\r\n\r\n                                <el-form-item label=\"状态信息\">\r\n                                    <el-select style=\"width: 100px; margin-left: 10px;\" v-model=\"userFormData.state\">\r\n                                        <el-option label=\"失败\" :value=\"1\"></el-option>\r\n                                        <el-option label=\"成功\" :value=\"0\"></el-option>\r\n                                    </el-select>\r\n                                </el-form-item>\r\n\r\n                                <!-- <el-form-item label=\"租户id\">\r\n        <el-input v-model=\"userFormData.tenantId\" placeholder=\"租户id\"></el-input>\r\n      </el-form-item> -->\r\n\r\n                                <!-- 使用 Flex 布局排列按钮 -->\r\n                                <el-form-item class=\"button-group\">\r\n                                    <el-button @click=\"submit\" type=\"primary\">提交</el-button>\r\n                                    <el-button @click=\"cancel\" type=\"info\">取消</el-button>\r\n                                </el-form-item>\r\n\r\n                            </el-form>\r\n                        </el-dialog>\r\n\r\n                        <!-- 新增弹窗区域 -->\r\n                        <el-dialog title=\"新增摘要内容\" :visible.sync=\"addshow\" width=\"600px\">\r\n                            <el-form :model=\"userFormData\" class=\"demo-form-inline\" label-width=\"80px\">\r\n\r\n                                <el-form-item label=\"缴纳项目\">\r\n                                    <el-input v-model=\"userFormData.paymentProject\" placeholder=\"缴纳项目名称\"></el-input>\r\n                                </el-form-item>\r\n\r\n                                <el-form-item label=\"公司缴纳\">\r\n                                    <el-input v-model=\"userFormData.companyRatio\" placeholder=\"公司缴纳比例\"></el-input>\r\n                                </el-form-item>\r\n\r\n                                <el-form-item label=\"个人缴纳\">\r\n                                    <el-input v-model=\"userFormData.personalRatio\" placeholder=\"个人缴纳比例\"></el-input>\r\n                                </el-form-item>\r\n\r\n                                <el-form-item label=\"备注\">\r\n                                    <el-input v-model=\"userFormData.description\" placeholder=\"备注信息\"></el-input>\r\n                                </el-form-item>\r\n\r\n                                <!-- <el-form-item label=\"租户id\">\r\n        <el-input v-model=\"userFormData.tenantId\" placeholder=\"租户id\"></el-input>\r\n      </el-form-item> -->\r\n\r\n                                <!-- 使用 Flex 布局排列按钮 -->\r\n                                <el-form-item class=\"button-group\">\r\n                                    <el-button @click=\"addsubmit\" type=\"primary\">提交</el-button>\r\n                                    <el-button @click=\"cancel\" type=\"info\">取消</el-button>\r\n                                </el-form-item>\r\n\r\n                            </el-form>\r\n                        </el-dialog>\r\n\r\n                    </div>\r\n                </el-tab-pane>\r\n            </el-tabs>\r\n\r\n            <!-- 新增账套弹窗区域 -->\r\n            <el-dialog title=\"新增账套具体信息\" :visible.sync=\"dialogFormVisible\">\r\n                <el-form :model=\"formData\" class=\"demo-form-inline\" label-width=\"120px\">\r\n                    <el-form-item label=\"账套名称\">\r\n                        <el-input v-model=\"formData.bookName\" placeholder=\"账套名称\"></el-input>\r\n                    </el-form-item>\r\n                    <el-form-item label=\"联系人\">\r\n                        <el-input v-model=\"formData.contactPerson\" placeholder=\"联系人\"></el-input>\r\n                    </el-form-item>\r\n                    <el-form-item label=\"联系人电话\">\r\n                        <el-input v-model=\"formData.contactPhoneNum\" placeholder=\"联系人电话\"></el-input>\r\n                    </el-form-item>\r\n                    <el-form-item label=\"纳税类型\">\r\n                        <el-select v-model=\"formData.varType\" placeholder=\"请选择纳税类型\">\r\n                            <el-option label=\"一般纳税人\" value=\"一般纳税人\"></el-option>\r\n                            <el-option label=\"小规模纳税人\" value=\"小规模纳税人\"></el-option>\r\n                        </el-select>\r\n                    </el-form-item>\r\n                    <el-form-item>\r\n                        <el-button @click=\"submit\">提交</el-button>\r\n                    </el-form-item>\r\n\r\n                </el-form>\r\n            </el-dialog>\r\n\r\n            <!-- 修改账套弹窗区域 -->\r\n            <el-dialog title=\"修改账套信息\" :visible.sync=\"show\">\r\n                <el-form :model=\"updateformData\" class=\"demo-form-inline\" label-width=\"120px\">\r\n\r\n                    <el-form-item label=\"账套名称\">\r\n                        <el-input v-model=\"updateformData.bookName\" placeholder=\"账套名称\"></el-input>\r\n                    </el-form-item>\r\n\r\n                    <el-form-item label=\"联系人\">\r\n                        <el-input v-model=\"updateformData.contactPerson\" placeholder=\"单位名称\"></el-input>\r\n                    </el-form-item>\r\n\r\n                    <el-form-item label=\"联系人电话\">\r\n                        <el-input v-model=\"updateformData.contactPhoneNum\" placeholder=\"联系人电话\"></el-input>\r\n                    </el-form-item>\r\n\r\n                    <el-form-item label=\"纳税类型\">\r\n                        <el-select v-model=\"updateformData.varType\" placeholder=\"请选择纳税类型\">\r\n                            <el-option label=\"一般纳税人\" value=\"一般纳税人\"></el-option>\r\n                            <el-option label=\"小企业会计准则\" value=\"小企业会计准则\"></el-option>\r\n                            <el-option label=\"小规模纳税人\" value=\"小规模纳税人\"></el-option>\r\n                        </el-select>\r\n                    </el-form-item>\r\n\r\n                    <el-form-item label=\"是否禁用\">\r\n                        <el-select v-model=\"updateformData.state\" placeholder=\"\">\r\n                            <el-option label=\"禁用\" value=\"禁用\"></el-option>\r\n                            <el-option label=\"启用\" value=\"启用\"></el-option>\r\n                        </el-select>\r\n                    </el-form-item>\r\n\r\n                    <el-form-item>\r\n                        <el-button @click=\"update\">提交</el-button>\r\n                    </el-form-item>\r\n\r\n                </el-form>\r\n            </el-dialog>\r\n\r\n        </div>\r\n    </el-card>\r\n\r\n</template>\r\n\r\n<script>\r\n\r\nimport dayjs from \"dayjs\";\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n\r\n    data() {\r\n        return {\r\n            token: localStorage.getItem('token'),\r\n            tabPosition: 'left',\r\n            accountBooksList: [],\r\n            userList: [],\r\n            roleList: [],\r\n            permissionList: [],\r\n            dialogFormVisible: false,\r\n            isTrueOrFalse: false,\r\n            formData: {\r\n                id: '',\r\n                bookName: '',\r\n                contactPerson: '',\r\n                contactPhoneNum: '',\r\n                varType: '',\r\n                created: '',\r\n                state: ''\r\n            },\r\n            updateformData: {\r\n                id: '',\r\n                bookName: '',\r\n                contactPerson: '',\r\n                contactPhoneNum: '',\r\n                varType: '',\r\n                end: '',\r\n                state: ''\r\n            },\r\n            //用户管理数据\r\n            userFormDate: {\r\n                id: '',\r\n                name: '',\r\n                username: '',\r\n                phone: '',\r\n                email: '',\r\n                roleName: '',\r\n                image: ''\r\n            },\r\n            list: [],\r\n            // 分页相关\r\n            pageno: 1,\r\n            pagesize: 5,\r\n            total: 0,\r\n            // 搜索条件\r\n            params: {\r\n                state: undefined\r\n            },\r\n            // 新增/修改 内容\r\n            userFormData: {\r\n                companyRatio: '',\r\n                description: '',\r\n                paymentProject: '',\r\n                personalRatio: '',\r\n                id: '',\r\n                state: '',\r\n                tenantId: ''\r\n            },\r\n            show: false,\r\n            addshow: false,\r\n\r\n            pickerOptions: {\r\n                shortcuts: [{\r\n                    text: '最近一周',\r\n                    onClick(picker) {\r\n                        const end = new Date();\r\n                        const start = new Date();\r\n                        start.setTime(start.getTime() - 3600 * 1000 * 24 * 7);\r\n                        picker.$emit('pick', [start, end]);\r\n                    }\r\n                }, {\r\n                    text: '最近一个月',\r\n                    onClick(picker) {\r\n                        const end = new Date();\r\n                        const start = new Date();\r\n                        start.setTime(start.getTime() - 3600 * 1000 * 24 * 30);\r\n                        picker.$emit('pick', [start, end]);\r\n                    }\r\n                }, {\r\n                    text: '最近三个月',\r\n                    onClick(picker) {\r\n                        const end = new Date();\r\n                        const start = new Date();\r\n                        start.setTime(start.getTime() - 3600 * 1000 * 24 * 90);\r\n                        picker.$emit('pick', [start, end]);\r\n                    }\r\n                }]\r\n            },\r\n            value1: [new Date(2000, 10, 10, 10, 10), new Date(2000, 10, 11, 10, 10)],\r\n            value2: '',\r\n            show: false\r\n        };\r\n    },\r\n    created() {\r\n        this.getList();\r\n        this.getUriList()\r\n        this.getUserList()\r\n        this.getRoleList()\r\n        this.getPermissionList()\r\n        this.role = localStorage.getItem('role');\r\n        this.storeId = localStorage.getItem('storeId');\r\n        console.log(this.token)\r\n    },\r\n    methods: {\r\n        async getUriList() {\r\n\r\n            const res = await axios({\r\n                url: \"http://localhost:8081/log/list\",\r\n                method: \"get\",\r\n                // headers: localStorage.getItem(\"token\"),\r\n                params: {\r\n                    page: this.pageno,\r\n                    limit: this.pagesize,\r\n                    ...this.params,\r\n                    startTime: this.value2[0],\r\n                    overTime: this.value2[1]\r\n                },\r\n            });\r\n            // 修改日期格式\r\n            this.list = res.data.data.map(item => {\r\n                return {\r\n                    ...item,\r\n                    // 其他字段...\r\n                    time: dayjs(item.time).format('YYYY-MM-DD HH:mm:ss')\r\n                };\r\n            });\r\n            this.total = res.data.count;\r\n        },\r\n        // 点击搜索\r\n        search() {\r\n            this.getUriList()\r\n        },\r\n        // 页码改变\r\n        pagechange(pageno) {\r\n            // 条件改变\r\n            this.pageno = pageno\r\n            // 重新请求数据\r\n            this.getUriList()\r\n        },\r\n\r\n\r\n        async getUserList(token) {\r\n            const res = await axios({\r\n                method: \"get\",\r\n                url: \"http://localhost:8081/admin/list\",\r\n            });\r\n            // 遍历返回的数据，将 createTime 和 endTime 转换为指定格式的日期时间字符串\r\n            this.userList = res.data.data.map(item => {\r\n                item.created = dayjs(item.created).format('YYYY-MM-DD HH:mm:ss');\r\n                item.updated = dayjs(item.updated).format('YYYY-MM-DD HH:mm:ss');\r\n                return item;\r\n            });\r\n        },\r\n        async getRoleList() {\r\n            const res = await axios({\r\n                method: \"get\",\r\n                url: \"http://localhost:8081/role/list\",\r\n            }); 0\r\n            // 遍历返回的数据，将 createTime 和 endTime 转换为指定格式的日期时间字符串\r\n            this.roleList = res.data.data.map(item => {\r\n                item.created = dayjs(item.created).format('YYYY-MM-DD HH:mm:ss');\r\n                return item;\r\n            });\r\n        },\r\n        async getPermissionList() {\r\n            const res = await axios({\r\n                method: \"get\",\r\n                url: \"http://localhost:8081/permission/list\",\r\n            }); 0\r\n            // 遍历返回的数据，将 createTime 和 endTime 转换为指定格式的日期时间字符串\r\n            this.permissionList = res.data.data.map(item => {\r\n                item.created = dayjs(item.created).format('YYYY-MM-DD HH:mm:ss');\r\n                return item;\r\n            });\r\n        },\r\n        async getList() {\r\n            const res = await axios({\r\n                method: \"get\",\r\n                url: \"http://localhost:8081/account/page\",\r\n            });\r\n            // 遍历返回的数据，将 createTime 和 endTime 转换为指定格式的日期时间字符串\r\n            this.accountBooksList = res.data.data.map(item => {\r\n                item.created = dayjs(item.created).format('YYYY-MM-DD HH:mm:ss');\r\n                if (item.end) {\r\n                    item.end = dayjs(item.end).format('YYYY-MM-DD HH:mm:ss');\r\n                } else {\r\n                    item.end = ''; // 如果 endTime 为空，则赋空值\r\n                }\r\n                return item;\r\n            });\r\n        },\r\n\r\n        viewAccountDetails(id, bookName) {\r\n            // 存储具体某个账套的bookID到localStorage\r\n            // localStorage.setItem(\"bookID\", id);\r\n            // localStorage.setItem(\"bookName\", bookName);\r\n            // 这里可以跳转到具体账套的详细信息页面或执行其他操作\r\n            // 示例：跳转到名为'/accountDetails'的路由\r\n            this.$router.push('/home');\r\n        },\r\n\r\n        // 打开新增弹窗，\r\n        addOpen() {\r\n            // 打开弹窗\r\n            this.dialogFormVisible = true\r\n            // 记录状态\r\n            // 重置formData\r\n            this.formData = {\r\n                id: '',\r\n                bookName: '',\r\n                contactPerson: '',\r\n                contactPhoneNum: '',\r\n                varType: '',\r\n            }\r\n        },\r\n        updateOpen(item) {\r\n            this.show = true\r\n            this.updateformData = { ...item }\r\n        },\r\n\r\n        async update() {\r\n\r\n            const data = {\r\n                ...this.updateformData,\r\n\r\n            };\r\n            if (this.updateformData.state === '禁用') {\r\n                data.end = new Date()\r\n                data.state = '禁用'\r\n            } else {\r\n                data.end = null\r\n                data.state = '启用'\r\n            }\r\n            const res = await axios({\r\n                url: \"http://localhost:8081/account/update\",\r\n                method: 'post',\r\n                data: data\r\n            })\r\n            this.show = false\r\n            this.getList()\r\n        },\r\n\r\n        async submit() {\r\n            // 拷贝formData到data\r\n            const data = {\r\n                ...this.formData,\r\n                // 添加其他字段\r\n                created: new Date(),\r\n                end: null,\r\n                storeId: localStorage.getItem('storeId'),\r\n                state: '启用'\r\n            }\r\n            const res = await axios({\r\n                url: \"http://localhost:8081/account/add\",\r\n                method: 'post',\r\n                data: data\r\n            })\r\n            this.dialogFormVisible = false\r\n            this.getList()\r\n        },\r\n    },\r\n\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.text {\r\n    font-size: 14px;\r\n}\r\n\r\n.item {\r\n    margin-bottom: 18px;\r\n}\r\n\r\n.clearfix:before,\r\n.clearfix:after {\r\n    display: table;\r\n    content: \"\";\r\n}\r\n\r\n.clearfix:after {\r\n    clear: both\r\n}\r\n\r\n.box-card {\r\n    width: 480px;\r\n}\r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}