{"ast":null,"code":"import axios from 'axios';\nimport dayjs from 'dayjs';\nimport { Message } from 'element-ui';\nexport default {\n  data() {\n    return {\n      tableHeaderClassName: 'custom-table-header',\n      // 自定义的表头样式类名\n      list: [],\n      userFormData: {\n        date: dayjs().format('YYYY-MM-DD '),\n        amount: '',\n        category: '',\n        reason: '',\n        remarks: ''\n      },\n      pageno: 1,\n      pagesize: 4,\n      total: 0,\n      params: {},\n      bookId: 6\n    };\n  },\n  created() {\n    this.bookId = localStorage.getItem('bookID'), this.getList();\n  },\n  methods: {\n    async getList() {\n      const res = await axios({\n        url: \"http://localhost:8081/subjectAccount/page\",\n        method: \"get\",\n        params: {\n          pageno: this.pageno,\n          pagesize: this.pagesize,\n          bookId: this.bookId\n        }\n      });\n      this.list = res.data.data.map(item => {\n        return {\n          ...item,\n          createTime: dayjs(item.createTime).format('YYYY-MM-DD '),\n          updateTime: dayjs(item.updateTime).format('YYYY-MM-DD ')\n        };\n      });\n      this.total = res.data.count;\n    },\n    async delete() {\n      const res = await axios({\n        url: \"http://localhost:8081/subjectAccount/delete\",\n        method: \"get\",\n        params: {\n          pageno: this.pageno,\n          pagesize: this.pagesize,\n          bookId: this.bookId\n        }\n      });\n      this.list = res.data.data.map(item => {\n        return {\n          ...item,\n          createTime: dayjs(item.createTime).format('YYYY-MM-DD '),\n          updateTime: dayjs(item.updateTime).format('YYYY-MM-DD ')\n        };\n      });\n      this.total = res.data.count;\n    },\n    async batch() {\n      const res = await axios({\n        url: \"http://localhost:8081/subjectAccount/delete\",\n        method: \"get\",\n        params: {\n          pageno: this.pageno,\n          pagesize: this.pagesize,\n          bookId: this.bookId\n        }\n      });\n      this.list = res.data.data.map(item => {\n        return {\n          ...item,\n          createTime: dayjs(item.createTime).format('YYYY-MM-DD '),\n          updateTime: dayjs(item.updateTime).format('YYYY-MM-DD ')\n        };\n      });\n      this.total = res.data.count;\n    },\n    // 页码改变\n    pagechange(pageno) {\n      // 条件改变\n      this.pageno = pageno;\n      // 重新请求数据\n      this.getList();\n    },\n    // 打开新增弹窗，\n    add() {\n      // 打开弹窗\n      this.dialogFormVisible = true;\n      // 记录状态\n      this.actionType = 'add';\n      this.userFormData = {\n        baseSalary: 0.00,\n        allowance: 0.00,\n        bonus: 0.00,\n        subsidy: 0.00,\n        deduction: 0.00,\n        personalIncomeTax: 0.00,\n        insurance: 440.00,\n        actualSalary: 0.00\n      };\n      this.employeeID = this.selectedEmployee;\n      this.selectedEmployee = '';\n    },\n    //修改弹窗\n    update(row) {\n      // 打开弹窗\n      this.dialogFormVisible = true;\n      // 数据回显\n      this.userFormData.baseSalary = row.baseSalary;\n      this.userFormData.allowance = row.allowance;\n      this.userFormData.bonus = row.bonus;\n      this.userFormData.subsidy = row.subsidy;\n      this.userFormData.deduction = row.deduction;\n      this.userFormData.personalIncomeTax = row.personalIncomeTax;\n      this.userFormData.actualSalary = row.actualSalary;\n      this.userFormData.insurance = row.insurance;\n      this.selectedEmployee = row.employee.employeeID;\n      // 记录id\n      this.salaryID = row.salaryID;\n      this.employeeID = this.selectedEmployee;\n      console.log(this.salaryID);\n      console.log(row);\n      // 记录动作\n      this.actionType = 'edit';\n    }\n  }\n};","map":{"version":3,"names":["axios","dayjs","Message","data","tableHeaderClassName","list","userFormData","date","format","amount","category","reason","remarks","pageno","pagesize","total","params","bookId","created","localStorage","getItem","getList","methods","res","url","method","map","item","createTime","updateTime","count","delete","batch","pagechange","add","dialogFormVisible","actionType","baseSalary","allowance","bonus","subsidy","deduction","personalIncomeTax","insurance","actualSalary","employeeID","selectedEmployee","update","row","employee","salaryID","console","log"],"sources":["src/views/bookkeeping/SubjectAccount.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <el-card>\r\n            <el-card>\r\n                <span style=\"font-size: 18px;font-weight: bold;font-family: 'Times New Roman', Times, serif;\">账户管理</span>\r\n            </el-card>\r\n            <el-card>\r\n                <div>\r\n                    <el-form :inline=\"true\">\r\n                        <!-- 新增按钮 -->\r\n                       <el-form-item>\r\n                            <el-button type=\"primary\" @click=\"add\">新增</el-button>\r\n                       </el-form-item>\r\n\r\n                        <!-- 删除按钮 -->\r\n                       <el-form-item>\r\n                            <el-button type=\"primary\" @click=\"batch\">删除</el-button>\r\n                       </el-form-item>\r\n                    </el-form>\r\n                </div>\r\n                <el-table :data=\"list\" style=\"width: 100%;margin-top: 15px;\" :header-row-class-name=\"tableHeaderClassName\">\r\n                    <el-table-column prop=\"id\" label=\"编号\" align=\"center\"> </el-table-column>\r\n                    <el-table-column prop=\"number\" label=\"账户编号\" align=\"center\"> </el-table-column>\r\n                    <el-table-column prop=\"name\" label=\"账户名称\" align=\"center\"></el-table-column>\r\n                    <el-table-column prop=\"accountingSubject\" label=\"会计科目\" align=\"center\"></el-table-column>\r\n                    <el-table-column prop=\"balance\" label=\"余额\" align=\"center\"></el-table-column>\r\n                    <el-table-column prop=\"bankAccount\" label=\"银行考号\" align=\"center\"></el-table-column>\r\n                    <el-table-column fixed=\"right\" label=\"操作\" align=\"center\" width=\"200px\">\r\n                        <template #default=\"{ row }\">\r\n                            <el-button type=\"primary\" icon=\"el-icon-check\" circle @click=\"update(row)\"></el-button>\r\n                            <el-button type=\"primary\" icon=\"el-icon-close\" circle @click=\"delete(row)\"></el-button>\r\n                        </template>\r\n                    </el-table-column>\r\n                </el-table>\r\n\r\n                <!-- 分页组件 -->\r\n                <el-pagination @current-change=\"pagechange\" background layout=\"prev, pager, next\" :total=\"total\"\r\n                    :page-size=\"pagesize\" style=\"text-align: center; margin-top: 10px;\">\r\n                </el-pagination>\r\n            </el-card>\r\n\r\n        </el-card>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nimport dayjs from 'dayjs';\r\nimport { Message } from 'element-ui'\r\n\r\nexport default {\r\n    data() {\r\n        return {\r\n            tableHeaderClassName: 'custom-table-header',// 自定义的表头样式类名\r\n            list: [],\r\n            userFormData: {\r\n                date: dayjs().format('YYYY-MM-DD '),\r\n                amount: '',\r\n                category: '',\r\n                reason: '',\r\n                remarks: ''\r\n            },\r\n            pageno: 1,\r\n            pagesize: 4,\r\n            total: 0,\r\n            params: {\r\n            },\r\n            bookId:6\r\n        }\r\n    },\r\n    created() {\r\n        this.bookId = localStorage.getItem('bookID'),\r\n        this.getList()\r\n    },\r\n    methods: {\r\n        async getList() {\r\n            const res = await axios({\r\n                url: \"http://localhost:8081/subjectAccount/page\",\r\n                method: \"get\",\r\n                params: {\r\n                    pageno: this.pageno,\r\n                    pagesize: this.pagesize,\r\n                    bookId:this.bookId,\r\n                }\r\n            });\r\n            this.list = res.data.data.map(item => {\r\n                return {\r\n                    ...item,\r\n                    createTime: dayjs(item.createTime).format('YYYY-MM-DD '),\r\n                    updateTime: dayjs(item.updateTime).format('YYYY-MM-DD ')\r\n                };\r\n            });\r\n            this.total = res.data.count;\r\n        },\r\n        async delete(){\r\n            const res = await axios({\r\n                url: \"http://localhost:8081/subjectAccount/delete\",\r\n                method: \"get\",\r\n                params: {\r\n                    pageno: this.pageno,\r\n                    pagesize: this.pagesize,\r\n                    bookId:this.bookId,\r\n                }\r\n            });\r\n            this.list = res.data.data.map(item => {\r\n                return {\r\n                    ...item,\r\n                    createTime: dayjs(item.createTime).format('YYYY-MM-DD '),\r\n                    updateTime: dayjs(item.updateTime).format('YYYY-MM-DD ')\r\n                };\r\n            });\r\n            this.total = res.data.count;\r\n        },\r\n        async batch(){\r\n            const res = await axios({\r\n                url: \"http://localhost:8081/subjectAccount/delete\",\r\n                method: \"get\",\r\n                params: {\r\n                    pageno: this.pageno,\r\n                    pagesize: this.pagesize,\r\n                    bookId:this.bookId,\r\n                }\r\n            });\r\n            this.list = res.data.data.map(item => {\r\n                return {\r\n                    ...item,\r\n                    createTime: dayjs(item.createTime).format('YYYY-MM-DD '),\r\n                    updateTime: dayjs(item.updateTime).format('YYYY-MM-DD ')\r\n                };\r\n            });\r\n            this.total = res.data.count;\r\n        },\r\n        // 页码改变\r\n        pagechange(pageno) {\r\n            // 条件改变\r\n            this.pageno = pageno\r\n            // 重新请求数据\r\n            this.getList()\r\n        },\r\n        // 打开新增弹窗，\r\n        add() {\r\n            // 打开弹窗\r\n            this.dialogFormVisible = true;\r\n            // 记录状态\r\n            this.actionType = 'add';\r\n            this.userFormData = {\r\n                baseSalary: 0.00,\r\n                allowance: 0.00,\r\n                bonus: 0.00,\r\n                subsidy: 0.00,\r\n                deduction: 0.00,\r\n                personalIncomeTax: 0.00,\r\n                insurance: 440.00,\r\n                actualSalary: 0.00\r\n            };\r\n            this.employeeID = this.selectedEmployee;\r\n            this.selectedEmployee = ''\r\n        },\r\n        //修改弹窗\r\n        update(row) {\r\n            // 打开弹窗\r\n            this.dialogFormVisible = true\r\n            // 数据回显\r\n            this.userFormData.baseSalary = row.baseSalary\r\n            this.userFormData.allowance = row.allowance\r\n            this.userFormData.bonus = row.bonus\r\n            this.userFormData.subsidy = row.subsidy\r\n            this.userFormData.deduction = row.deduction\r\n            this.userFormData.personalIncomeTax = row.personalIncomeTax\r\n            this.userFormData.actualSalary = row.actualSalary\r\n            this.userFormData.insurance = row.insurance\r\n            this.selectedEmployee = row.employee.employeeID\r\n            // 记录id\r\n            this.salaryID = row.salaryID\r\n            this.employeeID = this.selectedEmployee\r\n            console.log(this.salaryID)\r\n            console.log(row)\r\n            // 记录动作\r\n            this.actionType = 'edit'\r\n        },\r\n\r\n    }\r\n\r\n\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n::v-deep .el-input.is-disabled .el-input__inner {\r\n    background-color: #fff;\r\n    text-align: center;\r\n}\r\n\r\n.flex-container {\r\n    display: flex;\r\n}\r\n\r\n.charge-header {\r\n    margin-bottom: 10px;\r\n}\r\n\r\n.charge-header>div {\r\n    display: inline-block;\r\n    margin-right: 15px;\r\n}\r\n\r\n/* 修改标题行的颜色 */\r\n::v-deep .el-dialog__header {\r\n    background-color: rgb(243, 247, 249);\r\n    /* 替换为你想要的背景颜色值 */\r\n    color: #000000;\r\n    /* 替换为你想要的文字颜色值 */\r\n}\r\n\r\n::v-deep .custom-table-header th {\r\n    background-color: rgb(249, 251, 252);\r\n    /* 替换为你想要的背景颜色值 */\r\n    color: #000000;\r\n    /* 替换为你想要的文字颜色值 */\r\n}\r\n\r\n.button-group {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    /* 将按钮平均分布在弹窗底部 */\r\n    margin-top: 20px;\r\n    /* 为按钮组设置上边距，以调整按钮与输入框的间隔 */\r\n    margin-right: 80px;\r\n}\r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}