{"ast":null,"code":"import axios from 'axios';\nimport { dataTool } from 'echarts';\nexport default {\n  data() {\n    return {\n      tableHeaderClassName: 'custom-table-header',\n      // 自定义的表头样式类名\n      list: [],\n      id: '',\n      userFormData: {\n        accountingAccount: ''\n      },\n      pageno: 1,\n      pagesize: 4,\n      total: 0,\n      params: {\n        accountingAccount: ''\n      },\n      show: false,\n      addshow: false\n    };\n  },\n  created() {\n    this.getList();\n  },\n  methods: {\n    async getList() {\n      const res = await axios({\n        url: \"http://localhost:8081//accounting/page\",\n        method: \"get\",\n        params: {\n          ...this.params,\n          page: this.pageno,\n          limit: this.pagesize\n        }\n      });\n      this.list = res.data.data;\n      this.total = res.data.count;\n      console.log(this.total);\n    },\n    // 点击搜索\n    search() {\n      this.getList();\n    },\n    // 页码改变\n    pagechange(pageno) {\n      // 条件改变\n      this.pageno = pageno;\n      // 重新请求数据\n      this.getList();\n    },\n    update(row) {\n      console.log(row);\n      this.show = true;\n      this.userFormData.accountingAccount = row.accountingAccount;\n      this.id = row.id;\n    },\n    async out(row) {\n      if (row.isDefault === '是') {\n        // 如果 isDefault 为 \"是\"，不执行删除操作\n        this.$message.warning('不能删除默认项');\n      } else {\n        const data = {\n          id: row.id\n        };\n        try {\n          const res = await axios.delete(\"http://localhost:8081/accounting/delete\", {\n            params: data\n          });\n\n          // 判断当前页是否是最后一页且只有一条数据\n          if (this.$data.pageno === Math.ceil(this.total / this.pagesize) && this.total % this.pagesize === 1) {\n            // 如果是最后一页且只有一条数据，页码减一\n            this.$data.pageno--;\n          }\n\n          // 查询数据\n          await this.getList();\n        } catch (error) {\n          console.error('Error deleting:', error);\n          // 处理错误\n        }\n      }\n    },\n    async submit() {\n      const data = {\n        id: this.id,\n        ...this.userFormData\n      };\n      const res = await axios({\n        url: \"http://localhost:8081/accounting/update\",\n        method: \"put\",\n        data: data\n      });\n      this.getList();\n      this.show = false;\n    },\n    cancel() {\n      this.show = false;\n      this.addshow = false;\n    },\n    async addsubmit() {\n      const data = {\n        ...this.userFormData\n      };\n      const res = await axios({\n        url: \"http://localhost:8081/accounting/add\",\n        method: \"post\",\n        data: data\n      });\n      this.getList();\n      this.addshow = false;\n    },\n    addopen() {\n      this.addshow = true;\n      this.userFormData.accountingAccount = '';\n    }\n  }\n};","map":{"version":3,"names":["axios","dataTool","data","tableHeaderClassName","list","id","userFormData","accountingAccount","pageno","pagesize","total","params","show","addshow","created","getList","methods","res","url","method","page","limit","count","console","log","search","pagechange","update","row","out","isDefault","$message","warning","delete","$data","Math","ceil","error","submit","cancel","addsubmit","addopen"],"sources":["src/views/voucher/AccountingAccount.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <el-card>\r\n            <el-card>\r\n                <span style=\"font-size: 18px;font-weight: bold;font-family: 'Times New Roman', Times, serif;\">会计科目</span>\r\n                <el-popover placement=\"top-start\" title=\"常用摘要功能介绍\" width=\"600\" trigger=\"hover\">\r\n                    <el-card>\r\n                        <span>摘要通过简要的文字描述,迅速明确交易内容，记录与该笔交易相关的业务事项</span><br>\r\n                        <span>在后续的财务核对和审计中，摘要是查找和理解交易内容的重要依据之一。</span><br>\r\n                        <span>清晰的摘要有助于提高财务数据的可读性和准确性。</span><br>\r\n                    </el-card>\r\n                    <i class=\"el-icon-info\" style=\"font-size: 16px; margin-left: 10px; margin-top: 5px;\"\r\n                        slot=\"reference\"></i>\r\n                </el-popover>\r\n\r\n            </el-card>\r\n            <el-card>\r\n                <div>\r\n                    <el-row type=\"flex\" justify=\"space-between\" align=\"middle\">\r\n                        <!-- 左侧部分，包括新增按钮 -->\r\n                        <el-col :span=\"6\">\r\n                            <el-button type=\"primary\" icon=\"el-icon-circle-plus-outline\" @click=\"addopen\">新增会计科目</el-button>\r\n                        </el-col>\r\n\r\n                        <!-- 右侧部分，包括查询输入框 -->\r\n                        <el-col :span=\"9\" :offset=\"14\">\r\n                            <el-input placeholder=\"请输入查询科目名称\" prefix-icon=\"el-icon-search\"\r\n                                v-model=\"params.accountingAccount\"></el-input>\r\n                        </el-col>\r\n                        <el-col :span=\"3\" :offset=\"0.5\">\r\n                            <el-button type=\"primary\" @click=\"search\">查询</el-button>\r\n                        </el-col>\r\n                    </el-row>\r\n                </div>\r\n                <el-table :data=\"list\" style=\"width: 100%;margin-top: 15px;\" :header-row-class-name=\"tableHeaderClassName\">\r\n                    <el-table-column prop=\"id\" label=\"序号\" align=\"center\" width=\"100\"> </el-table-column>\r\n                    <el-table-column prop=\"accountingAccount\" label=\"会计科目\" align=\"center\"></el-table-column>\r\n                    <el-table-column fixed=\"right\" label=\"操作\" align=\"center\" width=\"200px\">\r\n                        <template #default=\"{ row }\">\r\n                            <el-button type=\"primary\" icon=\"el-icon-edit\" circle @click=\"update(row)\"></el-button>\r\n                            <el-button type=\"danger\" icon=\"el-icon-delete\" circle @click=\"out(row)\"></el-button>\r\n                        </template>\r\n                    </el-table-column>\r\n                </el-table>\r\n\r\n                <!-- 分页组件 -->\r\n                <el-pagination @current-change=\"pagechange\" background layout=\"prev, pager, next\" :total=\"total\"\r\n                    :page-size=\"pagesize\" style=\"text-align: center; margin-top: 10px;\">\r\n                </el-pagination>\r\n            </el-card>\r\n\r\n            <!-- 修改弹窗区域 -->\r\n            <el-dialog title=\"修改会计科目\" :visible.sync=\"show\" width=\"600px\">\r\n                <el-form :model=\"userFormData\" class=\"demo-form-inline\" label-width=\"80px\">\r\n\r\n                    <el-form-item label=\"会计科目\">\r\n                        <el-input type=\"textarea\" v-model=\"userFormData.accountingAccount\" placeholder=\"会计科目\" :autosize=\"{ minRows: 4, maxRows: 6 }\"></el-input>\r\n                    </el-form-item>\r\n\r\n                    <!-- 使用 Flex 布局排列按钮 -->\r\n                    <el-form-item class=\"button-group\">\r\n                        <el-button @click=\"submit\" type=\"primary\">提交</el-button>\r\n                        <el-button @click=\"cancel\" type=\"info\">取消</el-button>\r\n                    </el-form-item>\r\n\r\n                </el-form>\r\n            </el-dialog>\r\n\r\n            <!-- 新增弹窗区域 -->\r\n            <el-dialog title=\"新增会计科目\" :visible.sync=\"addshow\" width=\"600px\">\r\n                <el-form :model=\"userFormData\" class=\"demo-form-inline\" label-width=\"80px\">\r\n\r\n                    <el-form-item label=\"会计科目\">\r\n                        <el-input type=\"textarea\" v-model=\"userFormData.accountingAccount\" placeholder=\"会计科目\" :autosize=\"{ minRows: 4, maxRows: 6 }\"></el-input>\r\n                    </el-form-item>\r\n\r\n                    <!-- 使用 Flex 布局排列按钮 -->\r\n                    <el-form-item class=\"button-group\">\r\n                        <el-button @click=\"addsubmit\" type=\"primary\">提交</el-button>\r\n                        <el-button @click=\"cancel\" type=\"info\">取消</el-button>\r\n                    </el-form-item>\r\n\r\n                </el-form>\r\n            </el-dialog>\r\n\r\n        </el-card>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nimport { dataTool } from 'echarts';\r\n\r\nexport default {\r\n    data() {\r\n        return {\r\n            tableHeaderClassName: 'custom-table-header',// 自定义的表头样式类名\r\n            list: [],\r\n            id: '',\r\n            userFormData: {\r\n                accountingAccount: ''\r\n            },\r\n            pageno: 1,\r\n            pagesize: 4,\r\n            total: 0,\r\n            params: {\r\n                accountingAccount: '',\r\n            },\r\n            show: false,\r\n            addshow: false\r\n        }\r\n    },\r\n    created() {\r\n        this.getList()\r\n    },\r\n    methods: {\r\n        async getList() {\r\n            const res = await axios({\r\n                url: \"http://localhost:8081//accounting/page\",\r\n                method: \"get\",\r\n                params: {\r\n                    ...this.params,\r\n                    page: this.pageno,\r\n                    limit: this.pagesize,\r\n                }\r\n            });\r\n            this.list = res.data.data;\r\n            this.total = res.data.count;\r\n            console.log(this.total)\r\n        },\r\n        // 点击搜索\r\n        search() {\r\n            this.getList()\r\n        },\r\n        // 页码改变\r\n        pagechange(pageno) {\r\n            // 条件改变\r\n            this.pageno = pageno\r\n            // 重新请求数据\r\n            this.getList()\r\n        },\r\n        update(row) {\r\n            console.log(row)\r\n            this.show = true;\r\n            this.userFormData.accountingAccount = row.accountingAccount;\r\n            this.id = row.id\r\n        },\r\n      async out(row) {\r\n        if (row.isDefault === '是') {\r\n          // 如果 isDefault 为 \"是\"，不执行删除操作\r\n          this.$message.warning('不能删除默认项');\r\n        } else {\r\n          const data = {\r\n            id: row.id,\r\n          };\r\n          try {\r\n            const res = await axios.delete(\"http://localhost:8081/accounting/delete\", {\r\n              params: data\r\n            });\r\n\r\n            // 判断当前页是否是最后一页且只有一条数据\r\n            if (this.$data.pageno === Math.ceil(this.total / this.pagesize) && this.total % this.pagesize === 1) {\r\n              // 如果是最后一页且只有一条数据，页码减一\r\n              this.$data.pageno--;\r\n            }\r\n\r\n            // 查询数据\r\n            await this.getList();\r\n          } catch (error) {\r\n            console.error('Error deleting:', error);\r\n            // 处理错误\r\n          }\r\n        }\r\n      },\r\n        async submit() {\r\n            const data = {\r\n                id: this.id,\r\n                ...this.userFormData\r\n            }\r\n            const res = await axios({\r\n                url: \"http://localhost:8081/accounting/update\",\r\n                method: \"put\",\r\n                data: data\r\n            })\r\n            this.getList()\r\n            this.show = false\r\n        },\r\n        cancel() {\r\n            this.show = false\r\n            this.addshow = false\r\n        },\r\n        async addsubmit() {\r\n            const data = {\r\n                ...this.userFormData\r\n            }\r\n            const res = await axios({\r\n                url: \"http://localhost:8081/accounting/add\",\r\n                method: \"post\",\r\n                data: data\r\n            })\r\n            this.getList()\r\n            this.addshow = false\r\n        },\r\n        addopen() {\r\n            this.addshow = true\r\n            this.userFormData.accountingAccount = ''\r\n        }\r\n    }\r\n\r\n\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n/* 修改标题行的颜色 */\r\n::v-deep .el-dialog__header {\r\n    background-color: rgb(243, 247, 249);\r\n    /* 替换为你想要的背景颜色值 */\r\n    color: #000000;\r\n    /* 替换为你想要的文字颜色值 */\r\n}\r\n\r\n::v-deep .custom-table-header th {\r\n    background-color: rgb(249, 251, 252);\r\n    /* 替换为你想要的背景颜色值 */\r\n    color: #000000;\r\n    /* 替换为你想要的文字颜色值 */\r\n}\r\n\r\n.button-group {\r\n  display: flex;\r\n  justify-content: space-between; /* 将按钮平均分布在弹窗底部 */\r\n  margin-top: 20px; /* 为按钮组设置上边距，以调整按钮与输入框的间隔 */\r\n  margin-right: 80px;\r\n}\r\n</style>"],"mappings":"AA0FA,OAAAA,KAAA;AACA,SAAAC,QAAA;AAEA;EACAC,KAAA;IACA;MACAC,oBAAA;MAAA;MACAC,IAAA;MACAC,EAAA;MACAC,YAAA;QACAC,iBAAA;MACA;MACAC,MAAA;MACAC,QAAA;MACAC,KAAA;MACAC,MAAA;QACAJ,iBAAA;MACA;MACAK,IAAA;MACAC,OAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,OAAA;EACA;EACAC,OAAA;IACA,MAAAD,QAAA;MACA,MAAAE,GAAA,SAAAjB,KAAA;QACAkB,GAAA;QACAC,MAAA;QACAR,MAAA;UACA,QAAAA,MAAA;UACAS,IAAA,OAAAZ,MAAA;UACAa,KAAA,OAAAZ;QACA;MACA;MACA,KAAAL,IAAA,GAAAa,GAAA,CAAAf,IAAA,CAAAA,IAAA;MACA,KAAAQ,KAAA,GAAAO,GAAA,CAAAf,IAAA,CAAAoB,KAAA;MACAC,OAAA,CAAAC,GAAA,MAAAd,KAAA;IACA;IACA;IACAe,OAAA;MACA,KAAAV,OAAA;IACA;IACA;IACAW,WAAAlB,MAAA;MACA;MACA,KAAAA,MAAA,GAAAA,MAAA;MACA;MACA,KAAAO,OAAA;IACA;IACAY,OAAAC,GAAA;MACAL,OAAA,CAAAC,GAAA,CAAAI,GAAA;MACA,KAAAhB,IAAA;MACA,KAAAN,YAAA,CAAAC,iBAAA,GAAAqB,GAAA,CAAArB,iBAAA;MACA,KAAAF,EAAA,GAAAuB,GAAA,CAAAvB,EAAA;IACA;IACA,MAAAwB,IAAAD,GAAA;MACA,IAAAA,GAAA,CAAAE,SAAA;QACA;QACA,KAAAC,QAAA,CAAAC,OAAA;MACA;QACA,MAAA9B,IAAA;UACAG,EAAA,EAAAuB,GAAA,CAAAvB;QACA;QACA;UACA,MAAAY,GAAA,SAAAjB,KAAA,CAAAiC,MAAA;YACAtB,MAAA,EAAAT;UACA;;UAEA;UACA,SAAAgC,KAAA,CAAA1B,MAAA,KAAA2B,IAAA,CAAAC,IAAA,MAAA1B,KAAA,QAAAD,QAAA,UAAAC,KAAA,QAAAD,QAAA;YACA;YACA,KAAAyB,KAAA,CAAA1B,MAAA;UACA;;UAEA;UACA,WAAAO,OAAA;QACA,SAAAsB,KAAA;UACAd,OAAA,CAAAc,KAAA,oBAAAA,KAAA;UACA;QACA;MACA;IACA;IACA,MAAAC,OAAA;MACA,MAAApC,IAAA;QACAG,EAAA,OAAAA,EAAA;QACA,QAAAC;MACA;MACA,MAAAW,GAAA,SAAAjB,KAAA;QACAkB,GAAA;QACAC,MAAA;QACAjB,IAAA,EAAAA;MACA;MACA,KAAAa,OAAA;MACA,KAAAH,IAAA;IACA;IACA2B,OAAA;MACA,KAAA3B,IAAA;MACA,KAAAC,OAAA;IACA;IACA,MAAA2B,UAAA;MACA,MAAAtC,IAAA;QACA,QAAAI;MACA;MACA,MAAAW,GAAA,SAAAjB,KAAA;QACAkB,GAAA;QACAC,MAAA;QACAjB,IAAA,EAAAA;MACA;MACA,KAAAa,OAAA;MACA,KAAAF,OAAA;IACA;IACA4B,QAAA;MACA,KAAA5B,OAAA;MACA,KAAAP,YAAA,CAAAC,iBAAA;IACA;EACA;AAGA"},"metadata":{},"sourceType":"module","externalDependencies":[]}