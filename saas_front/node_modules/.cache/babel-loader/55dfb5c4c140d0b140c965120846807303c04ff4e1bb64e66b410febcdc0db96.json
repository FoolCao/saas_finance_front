{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  data() {\n    return {\n      textBoxes: [{\n        value: ''\n      } // 初始文本框\n      // ... 可以添加更多初始文本框\n      ],\n      pickerOptions: {\n        shortcuts: [{\n          text: '最近一周',\n          onClick(picker) {\n            const end = new Date();\n            const start = new Date();\n            start.setTime(start.getTime() - 3600 * 1000 * 24 * 7);\n            picker.$emit('pick', [start, end]);\n          }\n        }, {\n          text: '最近一个月',\n          onClick(picker) {\n            const end = new Date();\n            const start = new Date();\n            start.setTime(start.getTime() - 3600 * 1000 * 24 * 30);\n            picker.$emit('pick', [start, end]);\n          }\n        }, {\n          text: '最近三个月',\n          onClick(picker) {\n            const end = new Date();\n            const start = new Date();\n            start.setTime(start.getTime() - 3600 * 1000 * 24 * 90);\n            picker.$emit('pick', [start, end]);\n          }\n        }]\n      },\n      value1: [new Date(2000, 10, 10, 10, 10), new Date(2000, 10, 11, 10, 10)],\n      value2: ''\n    };\n  },\n  created() {\n    addTextBox();\n  },\n  methods: {\n    addTextBox() {\n      this.textBoxes.push({\n        value: ''\n      }); // 添加一个新的空文本框\n    }\n  }\n};","map":{"version":3,"names":["data","textBoxes","value","pickerOptions","shortcuts","text","onClick","picker","end","Date","start","setTime","getTime","$emit","value1","value2","created","addTextBox","methods","push"],"sources":["src/views/carryover/Last.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <p>gxdeyxeuycecyue</p>\r\n    <el-form-item>\r\n      <el-date-picker v-model=\"value2\" type=\"datetimerange\" :picker-options=\"pickerOptions\" range-separator=\"至\"\r\n        start-placeholder=\"开始日期\" end-placeholder=\"结束日期\" align=\"right\">\r\n      </el-date-picker>\r\n    </el-form-item>\r\n    <el-row v-for=\"(item, index) in textBoxes\" :key=\"index\" class=\"text-box-row\">\r\n      <el-col :span=\"24\" class=\"text-box-col\">\r\n        <el-input v-model=\"item.value\" placeholder=\"请输入内容\"></el-input>\r\n      </el-col>\r\n    </el-row>\r\n    <el-button @click=\"addTextBox\">添加文本框</el-button>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      textBoxes: [\r\n        { value: '' }, // 初始文本框\r\n        // ... 可以添加更多初始文本框\r\n      ],\r\n\r\n      pickerOptions: {\r\n                shortcuts: [{\r\n                    text: '最近一周',\r\n                    onClick(picker) {\r\n                        const end = new Date();\r\n                        const start = new Date();\r\n                        start.setTime(start.getTime() - 3600 * 1000 * 24 * 7);\r\n                        picker.$emit('pick', [start, end]);\r\n                    }\r\n                }, {\r\n                    text: '最近一个月',\r\n                    onClick(picker) {\r\n                        const end = new Date();\r\n                        const start = new Date();\r\n                        start.setTime(start.getTime() - 3600 * 1000 * 24 * 30);\r\n                        picker.$emit('pick', [start, end]);\r\n                    }\r\n                }, {\r\n                    text: '最近三个月',\r\n                    onClick(picker) {\r\n                        const end = new Date();\r\n                        const start = new Date();\r\n                        start.setTime(start.getTime() - 3600 * 1000 * 24 * 90);\r\n                        picker.$emit('pick', [start, end]);\r\n                    }\r\n                }]\r\n            },\r\n            value1: [new Date(2000, 10, 10, 10, 10), new Date(2000, 10, 11, 10, 10)],\r\n            value2: ''\r\n    };\r\n  },\r\n  created() {\r\n    addTextBox();\r\n  },\r\n  methods: {\r\n    addTextBox() {\r\n      this.textBoxes.push({ value: '' }); // 添加一个新的空文本框\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.text-box-row {\r\n  margin-bottom: 20px;\r\n  /* 文本框之间的垂直间距 */\r\n}\r\n\r\n.text-box-col {\r\n  /* 这里通常不需要额外样式，因为 el-col 会根据 span 属性自动布局 */\r\n}\r\n\r\n.el-input {\r\n  /* 可以添加一些自定义样式，如宽度、边框等 */\r\n  width: 100%;\r\n  /* 宽度设置为100%以确保填满 el-col */\r\n}\r\n.row-box {\r\n    width: 100%;\r\n    display: flex;\r\n    margin-top: 20px;\r\n    margin-bottom: 8px;\r\n    justify-content: center;\r\n}\r\n</style>"],"mappings":";AAkBA;EACAA,KAAA;IACA;MACAC,SAAA,GACA;QAAAC,KAAA;MAAA;MACA;MAAA,CACA;MAEAC,aAAA;QACAC,SAAA;UACAC,IAAA;UACAC,QAAAC,MAAA;YACA,MAAAC,GAAA,OAAAC,IAAA;YACA,MAAAC,KAAA,OAAAD,IAAA;YACAC,KAAA,CAAAC,OAAA,CAAAD,KAAA,CAAAE,OAAA;YACAL,MAAA,CAAAM,KAAA,UAAAH,KAAA,EAAAF,GAAA;UACA;QACA;UACAH,IAAA;UACAC,QAAAC,MAAA;YACA,MAAAC,GAAA,OAAAC,IAAA;YACA,MAAAC,KAAA,OAAAD,IAAA;YACAC,KAAA,CAAAC,OAAA,CAAAD,KAAA,CAAAE,OAAA;YACAL,MAAA,CAAAM,KAAA,UAAAH,KAAA,EAAAF,GAAA;UACA;QACA;UACAH,IAAA;UACAC,QAAAC,MAAA;YACA,MAAAC,GAAA,OAAAC,IAAA;YACA,MAAAC,KAAA,OAAAD,IAAA;YACAC,KAAA,CAAAC,OAAA,CAAAD,KAAA,CAAAE,OAAA;YACAL,MAAA,CAAAM,KAAA,UAAAH,KAAA,EAAAF,GAAA;UACA;QACA;MACA;MACAM,MAAA,OAAAL,IAAA,4BAAAA,IAAA;MACAM,MAAA;IACA;EACA;EACAC,QAAA;IACAC,UAAA;EACA;EACAC,OAAA;IACAD,WAAA;MACA,KAAAhB,SAAA,CAAAkB,IAAA;QAAAjB,KAAA;MAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}